{
	"info": {
		"_postman_id": "84633d4d-1373-48d5-af36-55fe70f0c378",
		"name": "REST API: Dijkstra",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29333540",
		"_collection_link": "https://staynest.postman.co/workspace/StayNest-Workspace~b4968105-6408-442d-8658-0f5c979dc546/collection/29333540-84633d4d-1373-48d5-af36-55fe70f0c378?action=share&source=collection_link&creator=29333540"
	},
	"item": [
		{
			"name": "Dijkstra Path 0",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQ4NzU3YWEzLTJkOWYtNDQ2ZC1hNDM5LTA4MjRjZTFjMTgwNCIsImVtYWlsIjoidXN1YXJpb0BleGFtcGxlLmNvbSIsIm5hbWUiOiJVc3VhcmlvIEVqZW1wbG8iLCJyb2xlIjoiQURNSU4iLCJpYXQiOjE3MjA2ODk0MjYsImV4cCI6MTcyMDc3NTgyNn0.zCzt_fVqV6gmuSQ0P2QYVtEoI0VKzA3UvIUnu1uf5Gg",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"initial\": {\n    \"latitud\": 40.7128,\n    \"longitud\": -74.0060,\n    \"adyacentes\": [\n      {\n        \"latitud\": 34.0522,\n        \"longitud\": -118.2437,\n        \"adyacentes\": [\n          {\n            \"latitud\": 40.7128,\n            \"longitud\": -74.0060,\n            \"adyacentes\": []\n          },\n          {\n            \"latitud\": 41.8781,\n            \"longitud\": -87.6298,\n            \"adyacentes\": []\n          }\n        ]\n      },\n      {\n        \"latitud\": 41.8781,\n        \"longitud\": -87.6298,\n        \"adyacentes\": [\n          {\n            \"latitud\": 34.0522,\n            \"longitud\": -118.2437,\n            \"adyacentes\": []\n          },\n          {\n            \"latitud\": 37.7749,\n            \"longitud\": -122.4194,\n            \"adyacentes\": []\n          }\n        ]\n      }\n    ]\n  },\n  \"coordinates\": [\n    {\n      \"latitud\": 34.0522,\n      \"longitud\": -118.2437,\n      \"adyacentes\": [\n        {\n          \"latitud\": 40.7128,\n          \"longitud\": -74.0060,\n          \"adyacentes\": []\n        },\n        {\n          \"latitud\": 41.8781,\n          \"longitud\": -87.6298,\n          \"adyacentes\": []\n        }\n      ]\n    },\n    {\n      \"latitud\": 41.8781,\n      \"longitud\": -87.6298,\n      \"adyacentes\": [\n        {\n          \"latitud\": 34.0522,\n          \"longitud\": -118.2437,\n          \"adyacentes\": []\n        },\n        {\n          \"latitud\": 37.7749,\n          \"longitud\": -122.4194,\n          \"adyacentes\": []\n        }\n      ]\n    }\n  ],\n  \"final\": {\n    \"latitud\": 37.7749,\n    \"longitud\": -122.4194,\n    \"adyacentes\": [\n      {\n        \"latitud\": 41.8781,\n        \"longitud\": -87.6298,\n        \"adyacentes\": []\n      }\n    ]\n  }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/dijkstra/path/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"dijkstra",
						"path",
						""
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Dijkstra Path 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQ4NzU3YWEzLTJkOWYtNDQ2ZC1hNDM5LTA4MjRjZTFjMTgwNCIsImVtYWlsIjoidXN1YXJpb0BleGFtcGxlLmNvbSIsIm5hbWUiOiJVc3VhcmlvIEVqZW1wbG8iLCJyb2xlIjoiQURNSU4iLCJpYXQiOjE3MjA2ODk0MjYsImV4cCI6MTcyMDc3NTgyNn0.zCzt_fVqV6gmuSQ0P2QYVtEoI0VKzA3UvIUnu1uf5Gg",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"initial\": {\n        \"latitud\": 40.7128,\n        \"longitud\": -74.0060,\n        \"adyacentes\": [\n            {\n                \"latitud\": 34.0522,\n                \"longitud\": -118.2437\n            },\n            {\n                \"latitud\": 41.8781,\n                \"longitud\": -87.6298\n            }\n        ]\n    },\n    \"coordinates\": [\n        {\n            \"latitud\": 34.0522,\n            \"longitud\": -118.2437,\n            \"adyacentes\": [\n                {\n                    \"latitud\": 40.7128,\n                    \"longitud\": -74.0060\n                },\n                {\n                    \"latitud\": 37.7749,\n                    \"longitud\": -122.4194\n                }\n            ]\n        },\n        {\n            \"latitud\": 41.8781,\n            \"longitud\": -87.6298,\n            \"adyacentes\": [\n                {\n                    \"latitud\": 40.7128,\n                    \"longitud\": -74.0060\n                },\n                {\n                    \"latitud\": 37.7749,\n                    \"longitud\": -122.4194\n                }\n            ]\n        }\n    ],\n    \"final\": {\n        \"latitud\": 37.7749,\n        \"longitud\": -122.4194,\n        \"adyacentes\": [\n            {\n                \"latitud\": 34.0522,\n                \"longitud\": -118.2437\n            },\n            {\n                \"latitud\": 41.8781,\n                \"longitud\": -87.6298\n            }\n        ]\n    }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/dijkstra/path/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"dijkstra",
						"path",
						""
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Dijkstra Path 2 Short",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQ4NzU3YWEzLTJkOWYtNDQ2ZC1hNDM5LTA4MjRjZTFjMTgwNCIsImVtYWlsIjoidXN1YXJpb0BleGFtcGxlLmNvbSIsIm5hbWUiOiJVc3VhcmlvIEVqZW1wbG8iLCJyb2xlIjoiQURNSU4iLCJpYXQiOjE3MjA2ODk0MjYsImV4cCI6MTcyMDc3NTgyNn0.zCzt_fVqV6gmuSQ0P2QYVtEoI0VKzA3UvIUnu1uf5Gg",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"initial\": {\n        \"latitud\": 40.7128,\n        \"longitud\": -74.0060,\n        \"adyacentes\": [\n            {\n                \"latitud\": 34.0522,\n                \"longitud\": -118.2437\n            }\n        ]\n    },\n    \"coordinates\": [\n        {\n            \"latitud\": 34.0522,\n            \"longitud\": -118.2437,\n            \"adyacentes\": [\n                {\n                    \"latitud\": 40.7128,\n                    \"longitud\": -74.0060\n                }\n            ]\n        }\n    ],\n    \"final\": {\n        \"latitud\": 34.0522,\n        \"longitud\": -118.2437,\n        \"adyacentes\": [\n            {\n                \"latitud\": 40.7128,\n                \"longitud\": -74.0060\n            }\n        ]\n    }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/dijkstra/path/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"dijkstra",
						"path",
						""
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		},
		{
			"name": "Dijkstra Path 3 Long",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImQ4NzU3YWEzLTJkOWYtNDQ2ZC1hNDM5LTA4MjRjZTFjMTgwNCIsImVtYWlsIjoidXN1YXJpb0BleGFtcGxlLmNvbSIsIm5hbWUiOiJVc3VhcmlvIEVqZW1wbG8iLCJyb2xlIjoiQURNSU4iLCJpYXQiOjE3MjA2ODk0MjYsImV4cCI6MTcyMDc3NTgyNn0.zCzt_fVqV6gmuSQ0P2QYVtEoI0VKzA3UvIUnu1uf5Gg",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"initial\": {\n        \"latitud\": 40.7128,\n        \"longitud\": -74.0060,\n        \"adyacentes\": [\n            {\n                \"latitud\": 41.8781,\n                \"longitud\": -87.6298\n            }\n        ]\n    },\n    \"coordinates\": [\n        {\n            \"latitud\": 41.8781,\n            \"longitud\": -87.6298,\n            \"adyacentes\": [\n                {\n                    \"latitud\": 40.7128,\n                    \"longitud\": -74.0060\n                },\n                {\n                    \"latitud\": 34.0522,\n                    \"longitud\": -118.2437\n                },\n                {\n                    \"latitud\": 37.7749,\n                    \"longitud\": -122.4194\n                }\n            ]\n        },\n        {\n            \"latitud\": 34.0522,\n            \"longitud\": -118.2437,\n            \"adyacentes\": [\n                {\n                    \"latitud\": 41.8781,\n                    \"longitud\": -87.6298\n                },\n                {\n                    \"latitud\": 37.7749,\n                    \"longitud\": -122.4194\n                }\n            ]\n        }\n    ],\n    \"final\": {\n        \"latitud\": 37.7749,\n        \"longitud\": -122.4194,\n        \"adyacentes\": [\n            {\n                \"latitud\": 41.8781,\n                \"longitud\": -87.6298\n            },\n            {\n                \"latitud\": 34.0522,\n                \"longitud\": -118.2437\n            }\n        ]\n    }\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/v1/dijkstra/path/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"v1",
						"dijkstra",
						"path",
						""
					]
				},
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "localhost:8000"
		}
	]
}